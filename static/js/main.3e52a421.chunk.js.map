{"version":3,"sources":["components/Counter.tsx","App.tsx","index.tsx"],"names":["Counter","state","count","props","initialCount","name","children","groc","handleIncrement","console","log","pop","newState","setState","className","this","onClick","map","item","key","id","React","Component","groceries","purchased","ReactDOM","render","document","getElementById"],"mappings":"uLAgBaA,EAAb,2MAEoBC,MAAgB,CAE5BC,MAAO,EAAKC,MAAMC,aAClBC,KAAM,EAAKF,MAAMG,SACjBC,KAAM,EAAKJ,MAAMI,MANzB,EA6CqBC,gBAAkB,WAC/BC,QAAQC,IAAI,EAAKT,MAAMI,MACvB,EAAKJ,MAAMM,KAAKI,MAEhB,IAAMC,EAAmB,CAErBV,MAAO,EAAKD,MAAMC,MAAQ,EAC1BG,KAAM,EAAKJ,MAAMI,KACjBE,KAAM,EAAKN,MAAMM,MAGrB,EAAKM,SAASD,IAxDtB,wEA0BQ,OACI,yBAAKE,UAAU,oBACX,yBAAKA,UAAU,qCAAf,kBACA,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAb,gBAAuCC,KAAKd,MAAMC,OAClD,uBAAGY,UAAU,aAAb,SAAgCC,KAAKd,MAAMI,MAC3C,4BAAQS,UAAU,kBAAkBE,QAASD,KAAKP,iBAAlD,aACA,4BACKO,KAAKd,MAAMM,KAAKU,KAAI,SAACC,GAAD,OACjB,wBAAIJ,UAAU,kBAAkBK,IAAKD,EAAKE,IACrCF,EAAKb,gBApCtC,GAA6BgB,IAAMC,WCX7BC,EAAsB,CACxB,CACIH,GAAI,EACJf,KAAM,OACNmB,WAAW,GAEf,CACIJ,GAAI,EACJf,KAAM,OACNmB,WAAW,GAEf,CACIJ,GAAI,EACJf,KAAM,SACNmB,WAAW,GAEf,CACIJ,GAAI,EACJf,KAAM,WACNmB,WAAW,GAEf,CACIJ,GAAI,EACJf,KAAM,UACNmB,WAAW,GAEf,CACIJ,GAAI,EACJf,KAAM,QACNmB,WAAW,IC7BnBC,IAASC,OAAO,mBDkCT,WAEH,OAEI,kBAAC,EAAD,CAAStB,aAAc,EAAGC,KAAM,SAAUE,KAAMgB,GAE5C,6CCxCI,MAAQI,SAASC,eAAe,U","file":"static/js/main.3e52a421.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\n\r\ninterface IProps {\r\n\r\n    initialCount: number;\r\n    name: string;\r\n    groc: any[];\r\n}\r\n\r\ninterface IState {\r\n\r\n    count: number;\r\n    name: ReactNode;\r\n    groc: object[];\r\n}\r\n\r\nexport class Counter extends React.Component<IProps> {\r\n\r\n    public readonly state: IState = {\r\n\r\n        count: this.props.initialCount,\r\n        name: this.props.children,\r\n        groc: this.props.groc\r\n    };\r\n\r\n    // public readonly state: IState;\r\n\r\n    // public constructor(props: IProps) {\r\n\r\n    //     super(props);\r\n\r\n    //     this.state = {\r\n\r\n    //         count: this.props.initialCount,\r\n    //         name: this.props.name\r\n    //     };\r\n    // }\r\n\r\n    public render(): JSX.Element {\r\n\r\n        // const notPurchased: any[] = this.props.groc.filter((grocery: any) => !grocery.purchased);\r\n\r\n        return (\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-header bg-primary text-white\">Click Counter!</div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">Click Count: {this.state.count}</p>\r\n                    <p className=\"card-text\">Name: {this.state.name}</p>\r\n                    <button className=\"btn btn-primary\" onClick={this.handleIncrement}>Increment</button>\r\n                    <ul>\r\n                        {this.state.groc.map((item: any) => (\r\n                            <li className=\"list-group-item\" key={item.id}>\r\n                                {item.name}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private readonly handleIncrement = (): void => {\r\n        console.log(this.state.name);\r\n        this.state.groc.pop();\r\n\r\n        const newState: IState = {\r\n\r\n            count: this.state.count + 1,\r\n            name: this.state.name,\r\n            groc: this.state.groc\r\n        };\r\n\r\n        this.setState(newState);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Counter } from \"./components/Counter\";\r\n\r\n\r\nconst groceries: object[] = [\r\n    {\r\n        id: 1,\r\n        name: \"Milk\",\r\n        purchased: true\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Eggs\",\r\n        purchased: true\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Cheese\",\r\n        purchased: false\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Cake Mix\",\r\n        purchased: false\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Carrots\",\r\n        purchased: false\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Juice\",\r\n        purchased: true\r\n    }\r\n];\r\n\r\n\r\nexport function App(): JSX.Element {\r\n\r\n    return (\r\n\r\n        <Counter initialCount={0} name={\"Jeremy\"} groc={groceries}>\r\n\r\n            <strong>Jeremy</strong>\r\n\r\n        </Counter>\r\n    );\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}